{"version":3,"sources":["components/Table.tsx","helpers.ts","components/Filters.tsx","components/CreateYearModal.tsx","components/Header.tsx","components/SchoolMap.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Table","columns","data","useTable","useFilters","useSortBy","usePagination","getTableProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","bordered","hover","size","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","row","i","getRowProps","cells","cell","getCellProps","className","length","Button","onClick","disabled","FormControl","type","defaultValue","onChange","e","target","value","Number","style","width","as","custom","maxWidth","key","getApiURI","path","SelectColumnFilter","filterValue","setFilter","preFilteredRows","id","options","React","useMemo","Set","forEach","add","values","Form","Control","undefined","option","CreateYearModal","show","onHide","useState","isLoading","setLoading","isSending","setSending","mesto","skola","obor","setData","useForm","register","handleSubmit","errors","watch","useEffect","fetch","method","then","res","json","response","catch","error","console","log","Modal","onSubmit","body","JSON","stringify","Header","closeButton","Title","Body","color","loading","Row","Col","Group","Label","min","placeholder","ref","required","name","exampleRequired","Object","keys","Footer","variant","reloadData","toggleShowMap","showMap","setShow","Navbar","Nav","Item","Check","label","checked","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","SchoolMap","useRef","Map","center","zoom","height","TileLayer","url","attribution","d","Marker","position","lat","lng","Popup","nazev","App","setShowMap","reloadKey","setReloadKey","Filter","accessor","Math","random","v","top","left","zIndex","backgroundColor","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e7a411cf.chunk.js","sourcesContent":["import React from \"react\"\nimport { Button, FormControl } from \"react-bootstrap\"\nimport BTable from \"react-bootstrap/Table\"\nimport {\n  TableOptions,\n  useFilters,\n  usePagination,\n  useSortBy,\n  useTable\n} from \"react-table\"\n\n// Our table component\nfunction Table({ columns, data }: TableOptions<any>) {\n  const {\n    getTableProps,\n    headerGroups,\n    prepareRow,\n    // @ts-ignore\n    page,\n    // @ts-ignore\n    canPreviousPage,\n    // @ts-ignore\n    canNextPage,\n    // @ts-ignore\n    pageOptions,\n    // @ts-ignore\n    pageCount,\n    // @ts-ignore\n    gotoPage,\n    // @ts-ignore\n    nextPage,\n    // @ts-ignore\n    previousPage,\n    // @ts-ignore\n    setPageSize,\n    // @ts-ignore\n    state: { pageIndex, pageSize }\n  } = useTable(\n    {\n      columns,\n      data\n    },\n    useFilters,\n    useSortBy,\n    usePagination\n  )\n\n  // Render the UI for your table\n  return (\n    <div>\n      <BTable bordered hover size=\"md\" {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                /* @ts-ignore */\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <span>\n                    {/* @ts-ignore */}\n                    {column.isSorted\n                      ? /* @ts-ignore */\n                        column.isSortedDesc\n                        ? \" 🔽\"\n                        : \" 🔼\"\n                      : \"\"}\n                  </span>\n                  {/* @ts-ignore */}\n                  <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {/* @ts-ignore */}\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              /* @ts-ignore */\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell: any) => {\n                  return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </BTable>\n      <div className=\"d-flex align-items-center justify-content-center text-center w-100\">\n        <span>\n          Page{\" \"}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{\" \"}\n        </span>\n      </div>\n      <div className=\"d-flex align-items-center justify-content-center text-center w-100\">\n        <Button\n          onClick={() => gotoPage(0)}\n          disabled={!canPreviousPage}\n          className=\"mx-1\">\n          {\"<<\"}\n        </Button>{\" \"}\n        <Button\n          onClick={() => previousPage()}\n          disabled={!canPreviousPage}\n          className=\"mx-1\">\n          {\"<\"}\n        </Button>{\" \"}\n        <Button\n          onClick={() => nextPage()}\n          disabled={!canNextPage}\n          className=\"mx-1\">\n          {\">\"}\n        </Button>{\" \"}\n        <Button\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={!canNextPage}\n          className=\"mx-1\">\n          {\">>\"}\n        </Button>{\" \"}\n        <FormControl\n          type=\"number\"\n          defaultValue={pageIndex + 1}\n          onChange={(e) => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0\n            gotoPage(page)\n          }}\n          style={{ width: \"50px\" }}\n          className=\"mx-1\"\n        />\n        <FormControl\n          as=\"select\"\n          custom\n          className=\"mx-1\"\n          value={pageSize}\n          onChange={(e) => {\n            setPageSize(Number(e.target.value))\n          }}\n          style={{ maxWidth: 115 }}>\n          {[10, 20, 30, 40, 50].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </FormControl>\n      </div>\n    </div>\n  )\n}\n\nexport default Table\n","export function getApiURI(path: string = \"\") {\n  return \"http://localhost/projekt_skoly/public/api\" + path;\n}\n","import React from \"react\"\nimport { Form } from \"react-bootstrap\"\n\n// This is a custom filter UI for selecting\n// a unique option from a list\nexport function SelectColumnFilter({\n  // @ts-ignore\n  column: { filterValue, setFilter, preFilteredRows, id }\n}) {\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  const options = React.useMemo(() => {\n    const options = new Set()\n    preFilteredRows.forEach((row: any) => {\n      options.add(row.values[id])\n    })\n    // @ts-ignore\n    return [...options.values()]\n  }, [id, preFilteredRows])\n\n  // Render a multi-select box\n  return (\n    <Form.Control\n      as=\"select\"\n      value={filterValue}\n      custom\n      onChange={(e) => {\n        setFilter(e.target.value || undefined)\n      }}>\n      <option value=\"\">Vše</option>\n      {options.map((option, i) => (\n        <option key={i} value={option}>\n          {option}\n        </option>\n      ))}\n    </Form.Control>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\"\nimport { useForm } from \"react-hook-form\"\nimport { ClipLoader } from \"react-spinners\"\nimport { getApiURI } from \"../helpers\"\n\nfunction CreateYearModal({\n  show,\n  onHide\n}: {\n  show: boolean\n  onHide: () => any\n}) {\n  const [isLoading, setLoading] = useState<boolean>(true)\n  const [isSending, setSending] = useState<boolean>(false)\n  const [data, setData] = useState<any>({ mesto: [], skola: [], obor: [] })\n\n  const { register, handleSubmit, watch, errors } = useForm()\n  const onSubmit = (data: any) => {\n    setSending(true)\n    fetch(getApiURI(\"/schools/pocet\"), {\n      method: \"POST\",\n      body: JSON.stringify(data)\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        setSending(false)\n        console.log(response)\n        onHide()\n      })\n      .catch((error) => {\n        console.log(error)\n        setSending(false)\n      })\n  }\n\n  useEffect(() => {\n    if (!show) {\n      return\n    }\n\n    fetch(getApiURI(\"/schools/all\"), {\n      method: \"GET\"\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        setData(response)\n        setLoading(false)\n      })\n      .catch((error) => {\n        console.log(error)\n        setLoading(false)\n      })\n  }, [show])\n\n  return (\n    <Modal show={show} onHide={onHide} size=\"lg\">\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Přidat rok</Modal.Title>\n        </Modal.Header>\n        {isLoading ? (\n          <Modal.Body>\n            <div className=\"d-flex align-items-center justify-content-center\">\n              <ClipLoader size={150} color={\"#123abc\"} loading={isLoading} />\n            </div>\n          </Modal.Body>\n        ) : (\n          <Modal.Body>\n            <Row>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Rok</Form.Label>\n                  <Form.Control\n                    min={0}\n                    placeholder=\"Rok\"\n                    ref={register({ required: true })}\n                    name=\"rok\"\n                  />\n                  {errors.exampleRequired && (\n                    <span>This field is required</span>\n                  )}\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Počet</Form.Label>\n                  <Form.Control\n                    min={0}\n                    placeholder=\"Počet\"\n                    ref={register({ required: true })}\n                    name=\"pocet\"\n                  />\n                  {errors.exampleRequired && (\n                    <span>This field is required</span>\n                  )}\n                </Form.Group>\n              </Col>\n            </Row>\n            <Form.Group>\n              <Form.Label>Město</Form.Label>\n              <Form.Control\n                as=\"select\"\n                defaultValue=\"Město...\"\n                name=\"mesto\"\n                ref={register({ required: true })}>\n                {Object.keys(data.mesto).map((key) => (\n                  <option value={key}>{data.mesto[key]}</option>\n                ))}\n              </Form.Control>\n              {errors.exampleRequired && <span>This field is required</span>}\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Škola</Form.Label>\n              <Form.Control\n                as=\"select\"\n                defaultValue=\"Škola...\"\n                name=\"skola\"\n                ref={register({ required: true })}>\n                {Object.keys(data.skola).map((key) => (\n                  <option value={key}>{data.skola[key]}</option>\n                ))}\n              </Form.Control>\n              {errors.exampleRequired && <span>This field is required</span>}\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Obor</Form.Label>\n              <Form.Control\n                as=\"select\"\n                defaultValue=\"Obor...\"\n                name=\"obor\"\n                ref={register({ required: true })}>\n                {Object.keys(data.obor).map((key) => (\n                  <option value={key}>{data.obor[key]}</option>\n                ))}\n              </Form.Control>\n              {errors.exampleRequired && <span>This field is required</span>}\n            </Form.Group>\n          </Modal.Body>\n        )}\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onHide} disabled={isSending}>\n            Zrušit\n          </Button>\n          <Button variant=\"primary\" type=\"submit\" disabled={isSending}>\n            Přidat\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default CreateYearModal\n","import React, { useState } from \"react\"\nimport { Button, Form, Nav, Navbar } from \"react-bootstrap\"\nimport CreateYearModal from \"./CreateYearModal\"\n\nimport \"bootstrap/dist/js/bootstrap\"\n\nfunction Header({\n  reloadData,\n  toggleShowMap,\n  showMap\n}: {\n  reloadData: () => any\n  toggleShowMap: (v: boolean) => any\n  showMap: boolean\n}) {\n  const [show, setShow] = useState(false)\n\n  return (\n    <>\n      <Navbar className=\"bg-light justify-content-between\">\n        <Nav className=\"mr-auto\">\n          <Nav.Item>\n            <Form.Check\n              type=\"switch\"\n              id=\"test\"\n              label=\"Zobrazit mapu\"\n              checked={showMap}\n              // @ts-ignore\n              onChange={(e) => toggleShowMap(e.target.checked)}\n            />\n          </Nav.Item>\n        </Nav>\n        <div className=\"justify-content-end\">\n          <Button variant=\"success\" onClick={() => setShow(true)}>\n            Vytvořit rok\n          </Button>\n        </div>\n      </Navbar>\n      <CreateYearModal\n        show={show}\n        onHide={() => {\n          setShow(false)\n          reloadData()\n        }}\n      />\n    </>\n  )\n}\n\nexport default Header\n","import React, { useEffect, useRef, useState } from \"react\"\nimport { render } from \"react-dom\"\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\"\nimport L from \"leaflet\"\nimport \"leaflet/dist/leaflet.css\"\nimport { getApiURI } from \"../helpers\"\n//@ts-ignore\ndelete L.Icon.Default.prototype._getIconUrl\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n})\n\nfunction SchoolMap() {\n  const [isLoading, setLoading] = useState<boolean>(true)\n  const [data, setData] = useState<any>([])\n\n  const map = useRef<Map>()\n\n  useEffect(() => {\n    fetch(getApiURI(\"/schools/positions\"), {\n      method: \"GET\"\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        setData(response)\n        setLoading(false)\n      })\n      .catch((error) => {\n        console.log(error)\n        setLoading(false)\n      })\n  }, [])\n\n  return (\n    <Map\n      center={[49.7789766, 15.612118]}\n      zoom={9}\n      // @ts-ignore\n      ref={map}\n      style={{ height: \"calc(100% - 54px)\", width: \"100%\" }}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {data.map((d: any) => (\n        <Marker position={[d.lat, d.lng]}>\n          <Popup>\n            <b>{d.nazev}</b>\n          </Popup>\n        </Marker>\n      ))}\n    </Map>\n  )\n}\n\nexport default SchoolMap\n","import React, { useEffect, useState } from \"react\"\nimport logo from \"./logo.svg\"\nimport \"./App.css\"\nimport Table from \"./components/Table\"\nimport { getApiURI } from \"./helpers\"\nimport { SelectColumnFilter } from \"./components/Filters\"\nimport Header from \"./components/Header\"\nimport { Navbar } from \"react-bootstrap\"\nimport { ClipLoader } from \"react-spinners\"\nimport SchoolMap from \"./components/SchoolMap\"\n\nfunction App() {\n  const [isLoading, setLoading] = useState<boolean>(true)\n  const [showMap, setShowMap] = useState<boolean>(false)\n\n  const [data, setData] = useState<any>([])\n\n  const [reloadKey, setReloadKey] = useState<any>(0)\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Škola\",\n        Filter: SelectColumnFilter,\n        accessor: \"skola\"\n      },\n      {\n        Header: \"Obor\",\n        Filter: SelectColumnFilter,\n        accessor: \"obor\"\n      },\n      {\n        Header: \"Město\",\n        Filter: SelectColumnFilter,\n        accessor: \"mesto\"\n      },\n      {\n        Header: \"Počet\",\n        Filter: SelectColumnFilter,\n        accessor: \"pocet\"\n      },\n      {\n        Header: \"Rok\",\n        Filter: SelectColumnFilter,\n        accessor: \"rok\"\n      }\n    ],\n    []\n  )\n\n  useEffect(() => {\n    setLoading(true)\n    fetch(getApiURI(\"/schools\"), {\n      method: \"GET\"\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        setData(response)\n        setLoading(false)\n      })\n      .catch((error) => {\n        console.log(error)\n        setLoading(false)\n      })\n  }, [reloadKey])\n\n  return (\n    <div style={{ height: \"100vh\" }}>\n      <Header\n        reloadData={() => setReloadKey(Math.random())}\n        toggleShowMap={(v) => setShowMap(v)}\n        showMap={showMap}\n      />\n      {!showMap ? (\n        <div className=\"container\">\n          <Table columns={columns} data={data} />\n          {isLoading ? (\n            <div\n              style={{\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                width: \"100%\",\n                height: \"100%\",\n                zIndex: 2,\n                backgroundColor: \"rgba(0, 0, 0, 0.2\"\n              }}>\n              <div className=\"d-flex align-items-center justify-content-center\">\n                <ClipLoader size={150} color={\"#123abc\"} loading={isLoading} />\n              </div>\n            </div>\n          ) : null}\n        </div>\n      ) : (\n        <SchoolMap />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"jquery/dist/jquery\"\nimport \"popper.js/dist/popper\"\nimport \"popper.js/dist/popper-utils\"\nimport \"bootstrap/dist/js/bootstrap.min\"\n\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}